package com.example.demo.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.domain.ImgDTO;
import com.example.demo.service.CodeService;
import com.example.demo.service.ImgService;
import com.example.demo.service.ProductService;
import com.example.demo.service.ProductServiceImpl;

import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j2;

@RestController
@RequestMapping("/product")
@Log4j2
@AllArgsConstructor
public class ProductController {
	
	private final ProductService pservice;
	private final ImgService iservice;
	private final CodeService coservice;
	private final ProductServiceImpl poservice;
	
	@GetMapping("/productList")
	public ResponseEntity<Map<String, Object>> productList(@RequestParam int itemsPerPage, 
			@RequestParam int currentPage, @RequestParam String inputValue,
			@RequestParam(required = false) List<String> proCate) {
	    if (proCate == null) {
	        proCate = new ArrayList<>();
	    }
		Map<String, Object> list = new HashMap< >();
		//list.put("productdslList", pservice.joinDSLpage(itemsPerPage));
		System.out.println("proCate = "+proCate);
		list.put("productList", pservice.joinDSLpage(itemsPerPage, currentPage, inputValue));
		System.out.println("productList = "+pservice.joinDSLpage(itemsPerPage, currentPage, inputValue));
		list.put("allproduct", poservice.countAllProduct());
		list.put("maxpage", poservice.countPerPage(itemsPerPage));
		list.put("brandList", coservice.codeBrandOne());
		list.put("cateList", coservice.codeCateOne());
		list.put("pieceList", coservice.codePieceOne());
		list.put("stateList", coservice.codeStateOne());

		return ResponseEntity.ok(list);
	}
	
	
	@GetMapping("/productSearch")
	public ResponseEntity<?> productSearch(@RequestParam String productname) {
		System.out.println("productname = " +productname);
		List<ImgDTO> list = pservice.searchList(productname);
		System.out.println("searchList"+list);
		return ResponseEntity.ok(list);
	}
	
	@GetMapping("/productDetail")
	public ResponseEntity<Map<String, ?>> productDetail(@RequestParam String proId) {
		Map<String, Object> list = new HashMap< >();
		list.put("imgList", iservice.imgList(proId));
		System.out.println(iservice.imgList(proId));
		list.put("productList", pservice.selectOne(proId));
		//list.put("productList", iservice.selectProduct(proId));
		System.out.println("productList = "+pservice.selectOne(proId));
//		Product product = pservice.selectOne(proId);
//		System.out.println("product = "+product);
		return ResponseEntity.ok(list);
	}

}
